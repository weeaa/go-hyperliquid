// TEMPORARY AUTOGENERATED FILE: easyjson stub code to make the package
// compilable during generation.

package  hyperliquid

import (
  "github.com/mailru/easyjson/jwriter"
  "github.com/mailru/easyjson/jlexer"
)

func ( AssetInfo ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* AssetInfo ) UnmarshalJSON([]byte) error { return nil }
func ( AssetInfo ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* AssetInfo ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_AssetInfo *AssetInfo

func ( BuilderInfo ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* BuilderInfo ) UnmarshalJSON([]byte) error { return nil }
func ( BuilderInfo ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* BuilderInfo ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_BuilderInfo *BuilderInfo

func ( EvmContract ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* EvmContract ) UnmarshalJSON([]byte) error { return nil }
func ( EvmContract ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* EvmContract ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_EvmContract *EvmContract

func ( LimitOrderType ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* LimitOrderType ) UnmarshalJSON([]byte) error { return nil }
func ( LimitOrderType ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* LimitOrderType ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_LimitOrderType *LimitOrderType

func ( Meta ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* Meta ) UnmarshalJSON([]byte) error { return nil }
func ( Meta ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* Meta ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_Meta *Meta

func ( OrderRequest ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* OrderRequest ) UnmarshalJSON([]byte) error { return nil }
func ( OrderRequest ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* OrderRequest ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_OrderRequest *OrderRequest

func ( OrderType ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* OrderType ) UnmarshalJSON([]byte) error { return nil }
func ( OrderType ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* OrderType ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_OrderType *OrderType

func ( OrderTypeV2 ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* OrderTypeV2 ) UnmarshalJSON([]byte) error { return nil }
func ( OrderTypeV2 ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* OrderTypeV2 ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_OrderTypeV2 *OrderTypeV2

func ( OrderWire ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* OrderWire ) UnmarshalJSON([]byte) error { return nil }
func ( OrderWire ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* OrderWire ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_OrderWire *OrderWire

func ( SpotAssetCtx ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SpotAssetCtx ) UnmarshalJSON([]byte) error { return nil }
func ( SpotAssetCtx ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SpotAssetCtx ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SpotAssetCtx *SpotAssetCtx

func ( SpotAssetInfo ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SpotAssetInfo ) UnmarshalJSON([]byte) error { return nil }
func ( SpotAssetInfo ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SpotAssetInfo ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SpotAssetInfo *SpotAssetInfo

func ( SpotMeta ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SpotMeta ) UnmarshalJSON([]byte) error { return nil }
func ( SpotMeta ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SpotMeta ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SpotMeta *SpotMeta

func ( SpotTokenInfo ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* SpotTokenInfo ) UnmarshalJSON([]byte) error { return nil }
func ( SpotTokenInfo ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* SpotTokenInfo ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_SpotTokenInfo *SpotTokenInfo

func ( TriggerOrderType ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* TriggerOrderType ) UnmarshalJSON([]byte) error { return nil }
func ( TriggerOrderType ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* TriggerOrderType ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_TriggerOrderType *TriggerOrderType

func ( WsMsg ) MarshalJSON() ([]byte, error) { return nil, nil }
func (* WsMsg ) UnmarshalJSON([]byte) error { return nil }
func ( WsMsg ) MarshalEasyJSON(w *jwriter.Writer) {}
func (* WsMsg ) UnmarshalEasyJSON(l *jlexer.Lexer) {}

type EasyJSON_exporter_WsMsg *WsMsg
